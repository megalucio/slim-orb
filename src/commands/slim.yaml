description: Slim one or more Docker images and generate security profiles
parameters:
  images:
    type: string
    description: Comma-separated list of image names (e.g. "nginx,alpine")
  tag:
    type: string
    description: Tag to use for all input images
  repo:
    type: string
    default: ""
    description: Optional repo to prepend to each image name (e.g. "myrepo/")
  output_tag:
    type: string
    default: ""
    description: Tag to use for all output images (e.g. "slim" will produce nginx:slim). If not set, uses "slim.<tag>"
  setup_docker:
    type: boolean
    default: false
    description: Whether to set up remote Docker for image processing
steps:
  - when:
      condition: << parameters.setup_docker >>
      steps:
        - setup_remote_docker:
            docker_layer_caching: true
  - run:
      name: Install SlimToolkit
      command: |
        curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -
  - run:
      name: Slim Docker images and generate profiles
      command: |
        mkdir -p workspace
        IFS=',' read -ra IMAGES <<< "\<< parameters.images >>"
        for IMAGE in "${IMAGES[@]}"; do
          FULL_IMAGE="\<< parameters.repo >>${IMAGE}"
          INPUT_IMAGE="${FULL_IMAGE}:\<< parameters.tag >>"
          if [ -z "\<< parameters.output_tag >>" ]; then
            OUTPUT_IMAGE="${FULL_IMAGE}:slim.\<< parameters.tag >>"
          else
            OUTPUT_IMAGE="${FULL_IMAGE}:\<< parameters.output_tag >>"
          fi
          slim build --copy-meta-artifacts . --target "$INPUT_IMAGE" --tag "$OUTPUT_IMAGE"
          IMG_NAME=$(echo "$IMAGE" | cut -d'/' -f2- | cut -d':' -f1)
          if [ -f "${IMG_NAME}-apparmor-profile" ]; then
            mv "${IMG_NAME}-apparmor-profile" workspace/
          fi
          if [ -f "${IMG_NAME}-seccomp.json" ]; then
            mv "${IMG_NAME}-seccomp.json" workspace/
          fi
        done
  - persist_to_workspace:
      root: workspace
      paths:
        - .
