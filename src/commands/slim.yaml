description: |
  Slim one or more Docker images and generate security profiles.
  You can pass additional SlimToolkit global options using the 'global_options' parameter.
  For all possible options, see:
  https://github.com/slimtoolkit/slim?tab=readme-ov-file#usage-details
  You can pass additional SlimToolkit build command options using the 'build_options' parameter.
  For all possible options, see:
  https://github.com/slimtoolkit/slim?tab=readme-ov-file#build-command-options
parameters:
  images:
    type: string
    description: Comma-separated list of image names (e.g. "nginx,alpine")
  tag:
    type: string
    description: Tag to use for all input images
  repo:
    type: string
    default: ""
    description: Optional repo to prepend to each image name (e.g. "myrepo/")
  output_tag:
    type: string
    default: ""
    description: Tag to use for all output images (e.g. "slim" will produce nginx:slim). If not set, uses "slim.<tag>"
  setup_docker:
    type: boolean
    default: false
    description: Whether to set up remote Docker for image processing
  build_options:
    type: string
    default: ""
    description: Additional SlimToolkit build command options (see https://github.com/slimtoolkit/slim?tab=readme-ov-file#build-command-options)
  global_options:
    type: string
    default: ""
    description: Additional global options for the SlimToolkit command (see https://github.com/slimtoolkit/slim?tab=readme-ov-file#usage-details)
steps:
  - when:
      condition: << parameters.setup_docker >>
      steps:
        - setup_remote_docker:
            docker_layer_caching: true
  - run:
      name: Install SlimToolkit
      command: |
        curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -
  - run:
      name: Slim Docker images and generate profiles
      shell: /usr/bin/env python3
      command: <<include(scripts/slim.py)>>
      environment:
        IMAGES: << parameters.images >>
        TAG: << parameters.tag >>
        REPO: << parameters.repo >>
        OUTPUT_TAG: << parameters.output_tag >>
        BUILD_OPTIONS: << parameters.build_options >>
        GLOBAL_OPTIONS: << parameters.global_options >>
  - persist_to_workspace:
      root: workspace
      paths:
        - .




        
      
